--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
Function:        atoi
Args:
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          atoi
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 362, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
Function:        atoi
Args:
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          atoi
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 362, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 27, Column: 3 }
Function:        main
Args:
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 29, Column: 16 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 30, Column: 16 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 36, Column: 16 }
Function:        main
Args:
  - Callee:          omp_get_wtime
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 40, Column: 16 }
Function:        main
Args:
  - Callee:          omp_get_wtime
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 43, Column: 17 }
Function:        main
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 44, Column: 8 }
Function:        main
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 46, Column: 3 }
Function:        main
Args:
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 48, Column: 3 }
Function:        main
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 49, Column: 3 }
Function:        main
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 27, Column: 3 }
Function:        main
Args:
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 29, Column: 16 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 30, Column: 16 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 36, Column: 16 }
Function:        main
Args:
  - Callee:          omp_get_wtime
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 40, Column: 16 }
Function:        main
Args:
  - Callee:          omp_get_wtime
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 43, Column: 17 }
Function:        main
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 44, Column: 8 }
Function:        main
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 46, Column: 3 }
Function:        main
Args:
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 48, Column: 3 }
Function:        main
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 49, Column: 3 }
Function:        main
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: daxpy.c, Line: 21, Column: 9 }
Function:        main
Args:
  - String:          ''''
  - Callee:          atoi
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 362, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '10'
  - String:          ', threshold='
  - Threshold:       '487'
  - String:          ')'
  - String:          ' at callsite '
  - String:          main
  - String:          ':'
  - Line:            '7'
  - String:          ':'
  - Column:          '9'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: daxpy.c, Line: 24, Column: 9 }
Function:        main
Args:
  - String:          ''''
  - Callee:          atoi
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 362, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '10'
  - String:          ', threshold='
  - Threshold:       '487'
  - String:          ')'
  - String:          ' at callsite '
  - String:          main
  - String:          ':'
  - Line:            '10'
  - String:          ':'
  - Column:          '9'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: daxpy.c, Line: 25, Column: 14 }
Function:        main
Args:
  - String:          ''''
  - Callee:          atoi
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 362, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '10'
  - String:          ', threshold='
  - Threshold:       '487'
  - String:          ')'
  - String:          ' at callsite '
  - String:          main
  - String:          ':'
  - Line:            '11'
  - String:          ':'
  - Column:          '14'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: daxpy.c, Line: 33, Column: 3 }
Function:        main
Args:
  - String:          ''''
  - Callee:          init
    DebugLoc:        { File: daxpy.c, Line: 54, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          main
  - String:          ':'
  - Line:            '19'
  - String:          ':'
  - Column:          '3'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: daxpy.c, Line: 34, Column: 3 }
Function:        main
Args:
  - String:          ''''
  - Callee:          init
    DebugLoc:        { File: daxpy.c, Line: 54, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          main
  - String:          ':'
  - Line:            '20'
  - String:          ':'
  - Column:          '3'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: daxpy.c, Line: 42, Column: 17 }
Function:        main
Args:
  - String:          ''''
  - Callee:          check
    DebugLoc:        { File: daxpy.c, Line: 60, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-5'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          main
  - String:          ':'
  - Line:            '28'
  - String:          ':'
  - Column:          '17'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: daxpy.c, Line: 38, Column: 5 }
Function:        main
Args:
  - String:          ''''
  - Callee:          daxpy
    DebugLoc:        { File: daxpy.c, Line: 9, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-10'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          main
  - String:          ':'
  - Line:            '24'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
Function:        main
Args:
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
Function:        main
Args:
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
Function:        main
Args:
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 27, Column: 3 }
Function:        main
Args:
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 29, Column: 16 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 30, Column: 16 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 36, Column: 16 }
Function:        main
Args:
  - Callee:          omp_get_wtime
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 40, Column: 16 }
Function:        main
Args:
  - Callee:          omp_get_wtime
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 43, Column: 17 }
Function:        main
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 44, Column: 8 }
Function:        main
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 46, Column: 3 }
Function:        main
Args:
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 48, Column: 3 }
Function:        main
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 49, Column: 3 }
Function:        main
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
Function:        main
Args:
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
Function:        main
Args:
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
Function:        main
Args:
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 27, Column: 3 }
Function:        main
Args:
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 29, Column: 16 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 30, Column: 16 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 36, Column: 16 }
Function:        main
Args:
  - Callee:          omp_get_wtime
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 40, Column: 16 }
Function:        main
Args:
  - Callee:          omp_get_wtime
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 43, Column: 17 }
Function:        main
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 44, Column: 8 }
Function:        main
Args:
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 46, Column: 3 }
Function:        main
Args:
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 48, Column: 3 }
Function:        main
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: daxpy.c, Line: 49, Column: 3 }
Function:        main
Args:
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 10, Column: 21 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: daxpy.c, Line: 10, Column: 21 }
...
--- !Passed
Pass:            loop-idiom
Name:            ProcessLoopStridedStore
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'Transformed loop-strided store in '
  - Function:        main
    DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
  - String:          ' function into a call to '
  - NewFunction:     llvm.memset.p0.i64
  - String:          '() intrinsic'
  - FromBlock:       ''
  - ToBlock:         ''
...
--- !Passed
Pass:            loop-delete
Name:            Invariant
DebugLoc:        { File: daxpy.c, Line: 55, Column: 3 }
Function:        main
Args:
  - String:          Loop deleted because it is invariant
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 25, Column: 19 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 25, Column: 19 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 25, Column: 19 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: daxpy.c, Line: 25, Column: 19 }
Function:        main
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '/usr/include/stdlib.h', Line: 363, Column: 16 }
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        daxpy
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-14'
  - String:          ' and with tree size '
  - TreeSize:        '6'
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        daxpy
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-14'
  - String:          ' and with tree size '
  - TreeSize:        '6'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-15'
  - String:          ' and with tree size '
  - TreeSize:        '6'
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-15'
  - String:          ' and with tree size '
  - TreeSize:        '6'
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-6'
  - String:          ' and with tree size '
  - TreeSize:        '2'
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-6'
  - String:          ' and with tree size '
  - TreeSize:        '2'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: daxpy.c, Line: 37, Column: 3 }
Function:        main
Args:
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '8'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 20, Column: 7 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            lshr
    DebugLoc:        { File: daxpy.c, Line: 20, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            add
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
Function:        main
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: daxpy.c, Line: 11, Column: 3 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: daxpy.c, Line: 11, Column: 8 }
Function:        main
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-2'
  - String:          ' and with tree size '
  - TreeSize:        '2'
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-2'
  - String:          ' and with tree size '
  - TreeSize:        '2'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: daxpy.c, Line: 9, Column: 1 }
Function:        daxpy
Args:
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.568628e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: daxpy.c, Line: 9, Column: 0 }
Function:        daxpy
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 10, Column: 21 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 10, Column: 21 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 10, Column: 3 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 12, Column: 1 }
Function:        daxpy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: daxpy.c, Line: 9, Column: 0 }
Function:        daxpy
Args:
  - NumInstructions: '49'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: daxpy.c, Line: 37, Column: 3 }
Function:        main
Args:
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.882353e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: daxpy.c, Line: 14, Column: 1 }
Function:        main
Args:
  - NumSpills:       '6'
  - String:          ' spills '
  - TotalSpillsCost: '3.254902e+00'
  - String:          ' total spills cost '
  - NumReloads:      '6'
  - String:          ' reloads '
  - TotalReloadsCost: '3.039216e+00'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '1'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '1.000000e+00'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '25'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '3.309804e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
Function:        main
Args:
  - NumStackBytes:   '88'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '13'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 20, Column: 7 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 21, Column: 14 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 24, Column: 14 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 27, Column: 3 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '15'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 20, Column: 7 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 55, Column: 3 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 37, Column: 21 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 11, Column: 15 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 36, Column: 16 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 37, Column: 3 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 37, Column: 3 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 37, Column: 3 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 37, Column: 3 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 37, Column: 3 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 40, Column: 16 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 42, Column: 29 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 20, Column: 7 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 61, Column: 21 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 0, Column: 0 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '19'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: daxpy.c, Line: 14, Column: 0 }
Function:        main
Args:
  - NumInstructions: '225'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: daxpy.c, Line: 54, Column: 1 }
Function:        init
Args:
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.568628e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: daxpy.c, Line: 54, Column: 0 }
Function:        init
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 55, Column: 21 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 55, Column: 21 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 55, Column: 3 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 56, Column: 10 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 58, Column: 1 }
Function:        init
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: daxpy.c, Line: 54, Column: 0 }
Function:        init
Args:
  - NumInstructions: '31'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: daxpy.c, Line: 60, Column: 1 }
Function:        check
Args:
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.337838e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: daxpy.c, Line: 60, Column: 0 }
Function:        check
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 61, Column: 21 }
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 61, Column: 3 }
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 61, Column: 21 }
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 62, Column: 14 }
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: daxpy.c, Line: 67, Column: 1 }
Function:        check
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: daxpy.c, Line: 60, Column: 0 }
Function:        check
Args:
  - NumInstructions: '37'
  - String:          ' instructions in function'
...
